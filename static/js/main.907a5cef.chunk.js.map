{"version":3,"sources":["logo.svg","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","fetchSearchResults","query","searchURL","cancel","axios","CancelToken","source","get","cancelToken","token","then","res","console","warn","data","resultNotFoundMsg","Response","setState","results","message","loading","catch","error","isCancel","handleOnInputChange","event","target","value","renderSearchResults","state","Object","keys","length","className","split","map","result","Title","Year","imdbID","this","htmlFor","type","name","id","placeholder","onChange","aria-hidden","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAe,I,oCC8GAA,E,kDAxGX,WAAaC,GAAS,IAAD,8BACjB,cAAOA,IAcXC,mBAAqB,SAAEC,GACnB,IAAMC,EAAS,oCAAgCD,EAAhC,mBAEX,EAAKE,QAEL,EAAKA,OAAOA,SAGhB,EAAKA,OAASC,IAAMC,YAAYC,SAEhCF,IAAMG,IAAKL,EAAW,CAClBM,YAAa,EAAKL,OAAOM,QAExBC,MAAM,SAAEC,GACLC,QAAQC,KAAMF,EAAIG,MAClB,IAAMC,EAAqBJ,EAAIG,KAAKE,SAAwD,GAA7C,2CAE/C,EAAKC,SAAS,CACVC,QAASP,EAAIG,KACbK,QAASJ,EACTK,SAAS,OAGhBC,OAAO,SAAAC,IACClB,IAAMmB,SAASD,IAAUA,IAC1B,EAAKL,SAAS,CACVG,SAAS,EACTD,QAAS,mDA1CR,EAgDrBK,oBAAsB,SAAEC,GACpB,IAAMxB,EAASwB,EAAMC,OAAOC,MAEtB1B,EAGF,EAAKgB,SAAU,CAAEhB,MAAOA,EAAOmB,SAAS,EAAMD,QAAS,KAAM,WACzD,EAAKnB,mBAAoBC,MAH7B,EAAKgB,SAAS,CAAChB,QAAOiB,QAAS,GAAIC,QAAS,MApD/B,EA4DrBS,oBAAsB,WAClB,IAAOV,EAAW,EAAKW,MAAhBX,QAIP,GAAIY,OAAOC,KAAKb,GAASc,OACrB,OACI,qBAAKC,UAAU,oBAAf,SACKf,EAAQgB,MAAM,MAAMC,KAAI,SAACC,GACtB,OACI,qBAAwBH,UAAU,eAAlC,UACI,oBAAIA,UAAU,cAAd,SAA6BG,EAAOC,QACpC,oBAAIJ,UAAU,aAAd,SAA4BG,EAAOE,SAF9BF,EAAOG,cAnEpC,EAAKV,MAAQ,CACT5B,MAAO,GACPiB,QAAS,GAETE,SAAS,EAETD,QAAS,IAGb,EAAKhB,OAAS,GAZG,E,0CAiFrB,WACI,IAAQF,EAAUuC,KAAKX,MAAf5B,MAER,OACI,sBAAKgC,UAAU,YAAf,UACA,oBAAIA,UAAU,UAAd,4BACA,wBAAOA,UAAU,eAAeQ,QAAQ,eAAxC,UACI,uBACIC,KAAK,OACLC,KAAK,QACLhB,MAAO1B,EACP2C,GAAG,eACHC,YAAY,SACZC,SAAUN,KAAKhB,sBAEnB,mBAAGS,UAAU,2BAA2Bc,cAAY,YAElDP,KAAKZ,6B,GApGCoB,IAAMC,WCWfC,E,4JATb,WACE,OACE,8BACE,cAAC,EAAD,U,GAJUF,IAAMC,WCOTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAS1BZ,M","file":"static/js/main.907a5cef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport axios from 'axios';\nimport '../SearchBar.css';\n\nclass SearchBar extends React.Component {\n\n    constructor( props ) {\n        super( props );\n        \n        this.state = {\n            query: '',\n            results: {},\n            //loading button, may or may not use\n            loading: false,\n            //message to user, if an error etc\n            message: ''\n        }\n\n        this.cancel = '';\n    }\n\n    fetchSearchResults = ( query ) => {\n        const searchURL = `http://www.omdbapi.com/?t=${query}&apikey=a193c6c`\n\n        if( this.cancel ) {\n            //cancel previous request before making new one\n            this.cancel.cancel();\n        }\n        // create new CancelToken\n        this.cancel = axios.CancelToken.source();\n\n        axios.get( searchURL, {\n            cancelToken: this.cancel.token \n        } )\n            .then( ( res ) => {\n                console.warn( res.data );\n                const resultNotFoundMsg = !res.data.Response ? 'Movie not found. Please try a new search' : '';\n\n                this.setState({\n                    results: res.data,\n                    message: resultNotFoundMsg,\n                    loading: false\n                });\n            })\n            .catch( error => {\n                if ( axios.isCancel(error) || error ) {\n                    this.setState({\n                        loading: false,\n                        message: 'Failed to fetch data. Please check network'\n                    });\n                }\n            });\n    };\n\n    handleOnInputChange = ( event ) => {\n        const query  = event.target.value;\n\n        if ( !query ) {\n            this.setState({query, results: {}, message: '' });\n        } else {\n            this.setState( { query: query, loading: true, message: '' }, () => {\n                this.fetchSearchResults( query );\n            });\n        }\n    };\n\n    renderSearchResults = () => {\n        const {results} = this.state;\n        //console.warn(results.data);\n\n        //might have to change results.length\n        if (Object.keys(results).length) {\n            return (\n                <div className=\"results-container\">\n                    {results.split(', ').map((result) => {\n                        return (\n                            <li key={result.imdbID} className=\"result-items\">\n                                <h6 className=\"movie-title\">{result.Title}</h6>\n                                <h6 className=\"movie-year\">{result.Year}</h6>\n                            </li>\n                        );\n                    })}\n                </div>\n            );\n        }\n    };\n\n    render() {\n        const { query } = this.state;\n\n        return (\n            <div className=\"container\">\n            <h2 className=\"heading\"> The Shoppies </h2>\n            <label className=\"search-label\" htmlFor=\"search-input\">\n                <input\n                    type=\"text\"\n                    name=\"query\"\n                    value={query}\n                    id=\"search-input\"\n                    placeholder=\"Search\"\n                    onChange={this.handleOnInputChange}\n                />\n                <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"/>\n            </label>\n                { this.renderSearchResults() }\n            </div>\n        )\n    }\n};\n\nexport default SearchBar","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport SearchBar from \"./components/SearchBar\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <SearchBar/> \n      </div>\n    )\n  }\n}\n\nexport default App;\n\n// old App shows react main page with loader\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// var element = React.createElement('h1', {className: 'greeting' }, 'Hi welcome to Chilli\\'s !!!!!');\n// ReactDOM.render(element, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}